{"version":3,"file":"static/js/629.082a2ef3.chunk.js","mappings":"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","sources":["components/structural/calculator/MomInertia.jsx","webpack://fe/./src/components/structural/calculator/MomInertia.css?4f6a"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./MomInertia.css\";\r\nimport Circular from './images/Circularbeam.png';\r\nimport Rectangular from './images/Rectangularbeam.png';\r\nimport IBeam from './images/Ibeam.png';\r\n\r\nconst MomInertiaCalc = () => {\r\n  const [beamType, setBeamType] = useState(\"\");\r\n  const [dimensions, setDimensions] = useState({});\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setDimensions((prev) => ({ ...prev, [name]: parseFloat(value) }));\r\n  };\r\n\r\n  const calculateInertia = () => {\r\n    let Ixx = 0, Iyy = 0, area = 0;\r\n\r\n    switch (beamType) {\r\n      case \"Circular\":\r\n        const { radius } = dimensions;\r\n        if (radius) {\r\n          Ixx = Iyy = (Math.PI * Math.pow(radius, 4)) / 4;\r\n          area = Math.PI * Math.pow(radius, 2);\r\n        }\r\n        break;\r\n\r\n      case \"Rectangular\":\r\n        const { width, height } = dimensions;\r\n        if (width && height) {\r\n          Ixx = (width * Math.pow(height, 3)) / 12;\r\n          Iyy = (height * Math.pow(width, 3)) / 12;\r\n          area = width * height;\r\n        }\r\n        break;\r\n\r\n      case \"I\":\r\n        const { h, b, t, tw } = dimensions;\r\n        if (h && b && t && tw) {\r\n          const flangeArea = b * t;\r\n          const webArea = (h - 2 * t) * tw;\r\n          const totalArea = 2 * flangeArea + webArea;\r\n\r\n          const IxxFlange = (b * Math.pow(t, 3)) / 12 + flangeArea * Math.pow(h / 2 - t / 2, 2);\r\n          const IxxWeb = (tw * Math.pow(h - 2 * t, 3)) / 12;\r\n          Ixx = 2 * IxxFlange + IxxWeb;\r\n\r\n          const IyyFlange = ((t * Math.pow(b, 3)) / 12);\r\n          const IyyWeb = ((h - 2 * t) * Math.pow(tw, 3)) / 12;\r\n          Iyy = 2 * IyyFlange + IyyWeb;\r\n\r\n          area = totalArea;\r\n        }\r\n        break;\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setResults({ Ixx, Iyy, area });\r\n};\r\n\r\n  const getImageForBeamType = () => {\r\n    switch (beamType) {\r\n      case \"Circular\":\r\n        return Circular;\r\n      case \"Rectangular\":\r\n        return Rectangular;\r\n      case \"I\":\r\n        return IBeam;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const beamImage = getImageForBeamType();\r\n\r\n  return (\r\n    <div className=\"center-container\">\r\n      <div className=\"beam-calculator\">\r\n        <div className=\"beam-selector\">\r\n          <label>\r\n            Select Beam Type:&ensp;\r\n            <select\r\n              value={beamType}\r\n              onChange={(e) => {\r\n                setBeamType(e.target.value);\r\n                setDimensions({});\r\n                setResults(null);\r\n              }}\r\n            >\r\n              <option value=\"\">Select...</option>\r\n              <option value=\"Circular\">Circular</option>\r\n              <option value=\"Rectangular\">Rectangular</option>\r\n              <option value=\"I\">I-Type</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n\r\n        {beamType && (\r\n          <>\r\n            <div className=\"dimension-inputs\">\r\n              {beamType === \"Circular\" && (\r\n                <label>\r\n                  Radius (r):&ensp;\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"radius\"\r\n                    value={dimensions.radius || \"\"}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </label>\r\n              )}\r\n\r\n              {beamType === \"Rectangular\" && (\r\n                <>\r\n                  <label>\r\n                    Width (b):&ensp;\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"width\"\r\n                      value={dimensions.width || \"\"}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Height (h):&ensp;\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"height\"\r\n                      value={dimensions.height || \"\"}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </label>\r\n                </>\r\n              )}\r\n\r\n              {beamType === \"I\" && (\r\n                <>\r\n                  <label>\r\n                    Total Height (h):&ensp;\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"h\"\r\n                      value={dimensions.h || \"\"}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Flange Width (b):&ensp;\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"b\"\r\n                      value={dimensions.b || \"\"}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Flange Thickness (t):&ensp;\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"t\"\r\n                      value={dimensions.t || \"\"}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Web Thickness (s):&ensp;\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"tw\"\r\n                      value={dimensions.tw || \"\"}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </label>\r\n                </>\r\n              )}\r\n\r\n            </div>\r\n\r\n            {beamImage && (\r\n              <div>\r\n                <img className=\"beam-image\" src={beamImage} alt={`${beamType} Beam`} />\r\n              </div>\r\n            )}\r\n\r\n            <button onClick={calculateInertia}>Calculate</button>\r\n          </>\r\n        )}\r\n\r\n        {results && (\r\n          <div className=\"results\">\r\n            <p>\r\n              <strong>Moment of Inertia (Ix):</strong> {results.Ixx.toFixed(2)} mm⁴\r\n            </p>\r\n            <p>\r\n              <strong>Moment of Inertia (Iy):</strong> {results.Iyy.toFixed(2)} mm⁴\r\n            </p>\r\n            <p>\r\n              <strong>Cross-Sectional Area (A):</strong> {results.area.toFixed(2)} mm²\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MomInertiaCalc;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["MomInertiaCalc","beamType","setBeamType","useState","dimensions","setDimensions","results","setResults","handleInputChange","e","name","value","target","prev","parseFloat","beamImage","getImageForBeamType","Circular","Rectangular","IBeam","_jsx","className","children","_jsxs","onChange","_Fragment","type","radius","width","height","h","b","t","tw","src","alt","onClick","calculateInertia","Ixx","Iyy","area","Math","PI","pow","flangeArea","totalArea","toFixed"],"sourceRoot":""}