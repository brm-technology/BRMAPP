{"version":3,"file":"static/js/402.79002260.chunk.js","mappings":"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","sources":["components/structural/beam/BeamEN100561Data.jsx","webpack://fe/./src/components/structural/beam/BeamData.css?244d"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./BeamData.css\";\r\nimport beamImage from \"./images/BeamEN100561.png\";\r\n\r\nconst BeamEN100561Data = ({ title, description }) => {\r\n  const [beams, setBeams] = useState([]);\r\n  const [filteredBeams, setFilteredBeams] = useState([]);\r\n  const [sizeOptions, setSizeOptions] = useState([]);\r\n  const [selectedSize, setSelectedSize] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const apiUrl = \"/api/beam/en100561/\";\r\n\r\n    axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        setBeams(data);\r\n        setFilteredBeams(data);\r\n\r\n        // Extract and sort sizes based on the number before the first 'x'\r\n        const sizes = [...new Set(data.map((beam) => beam.Size))];\r\n        const sortedSizes = sizes.sort((a, b) => {\r\n          const aSize = parseInt(a.split(\"x\")[0]);\r\n          const bSize = parseInt(b.split(\"x\")[0]);\r\n          return aSize - bSize;\r\n        });\r\n        setSizeOptions(sortedSizes);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedSize) {\r\n      setFilteredBeams(beams.filter((beam) => beam.Size === selectedSize));\r\n    } else {\r\n      setFilteredBeams(beams);\r\n    }\r\n  }, [selectedSize, beams]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <div className=\"filters\">\r\n        <label className=\"dropdown-label\">\r\n          Size:&ensp;\r\n          <select\r\n            value={selectedSize}\r\n            onChange={(e) => setSelectedSize(e.target.value)}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {sizeOptions.map((size) => (\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      {selectedSize && (\r\n        <div className=\"beam-details\">\r\n          <hr />\r\n          <h6>Leg Angel {selectedSize}</h6>\r\n          {filteredBeams.map((beam) => (\r\n            <div key={beam.id} className=\"beam\">\r\n              <table className=\"specs-table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>Height (h):</strong> {beam.a} mm\r\n                    </td>\r\n                    <td>\r\n                      <strong>Width (b):</strong> {beam.b} mm\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>Thickness (t):</strong> {beam.t} mm\r\n                    </td>\r\n                    <td>\r\n                      <strong>Corner Radius (r):</strong> {beam.r} mm\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <strong>Section Area:</strong> {beam.Secarea} cmÂ²\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan={2} style={{ textAlign: \"center\" }}>\r\n                      <img className=\"img-show\" src={beamImage} alt=\"Beam illustration\" />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeamEN100561Data;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_ref","title","description","beams","setBeams","useState","filteredBeams","setFilteredBeams","sizeOptions","setSizeOptions","selectedSize","setSelectedSize","useEffect","axios","get","then","response","data","sortedSizes","Set","map","beam","Size","sort","a","b","parseInt","split","catch","error","console","filter","_jsxs","className","children","_jsx","value","onChange","e","target","size","t","r","colSpan","Secarea","style","textAlign","src","beamImage","alt","id"],"sourceRoot":""}