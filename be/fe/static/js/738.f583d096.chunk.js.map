{"version":3,"file":"static/js/738.f583d096.chunk.js","mappings":"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","sources":["components/structural/beam/BeamEN10365Data.jsx","webpack://fe/./src/components/structural/beam/BeamData.css?244d"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./BeamData.css\";\r\nimport CbeamEN1003651 from \"./images/CbeamEN1003651.png\";\r\nimport CbeamEN1003652 from \"./images/CbeamEN1003652.png\";\r\nimport IbeamEN1003651 from \"./images/IbeamEN1003651.png\";\r\nimport IbeamEN1003652 from \"./images/IbeamEN1003652.png\";\r\n\r\nconst BeamEN10365Data = ({ title, description }) => {\r\n  const [beams, setBeams] = useState([]);\r\n  const [filteredBeams, setFilteredBeams] = useState([]);\r\n  const [profTypeOptions, setProfTypeOptions] = useState([]);\r\n  const [sizeOptions, setSizeOptions] = useState([]);\r\n  const [selectedProfType, setSelectedProfType] = useState(\"\");\r\n  const [selectedSize, setSelectedSize] = useState(\"\");\r\n\r\n  const imageMapping = {\r\n    IPE: IbeamEN1003651,\r\n    HE: IbeamEN1003651,\r\n    HL: IbeamEN1003651,\r\n    HD: IbeamEN1003651,\r\n    HP: IbeamEN1003651,\r\n    UBP: IbeamEN1003651,\r\n    UB: IbeamEN1003651,\r\n    UC: IbeamEN1003651,\r\n    I: IbeamEN1003652,\r\n    IPN: IbeamEN1003652,\r\n    J: IbeamEN1003652,\r\n    HLZ: IbeamEN1003652,\r\n    UPE: CbeamEN1003651,\r\n    PFC: CbeamEN1003651,\r\n    UPN: CbeamEN1003652,\r\n    U: CbeamEN1003652,\r\n    CH: CbeamEN1003652,\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Define customOrder inside useEffect\r\n    const customOrder = [\r\n      \"IPE\", \"HE\", \"HL\", \"HD\", \"HP\", \"UBP\", \"UB\", \"UC\",\r\n      \"I\", \"IPN\", \"J\", \"HLZ\",\r\n      \"UPE\", \"PFC\",\r\n      \"UPN\", \"U\", \"CH\",\r\n    ];\r\n\r\n    const apiUrl = \"/api/beam/en10365/\";\r\n\r\n    axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        setBeams(data);\r\n        setFilteredBeams(data);\r\n\r\n        const profTypes = [...new Set(data.map((beam) => beam.Proftype))];\r\n        const sortedProfTypes = profTypes.sort(\r\n          (a, b) => customOrder.indexOf(a) - customOrder.indexOf(b)\r\n        );\r\n        setProfTypeOptions(sortedProfTypes);\r\n\r\n        setSizeOptions([]); // Reset Size options initially\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []); // No dependencies needed for customOrder now\r\n\r\n  useEffect(() => {\r\n    let filtered = beams;\r\n\r\n    if (selectedProfType) {\r\n      filtered = filtered.filter((beam) => beam.Proftype === selectedProfType);\r\n\r\n      const sizes = [...new Set(filtered.map((beam) => beam.Size))];\r\n      const sortedSizes = sizes.sort((a, b) => {\r\n        const getFirstNumber = (str) => {\r\n          const match = str.match(/\\d+/); // Extract the first number from the string\r\n          return match ? parseInt(match[0], 10) : Infinity;\r\n        };\r\n        return getFirstNumber(a) - getFirstNumber(b);\r\n      });\r\n      setSizeOptions(sortedSizes);\r\n    } else {\r\n      setSizeOptions([]);\r\n    }\r\n\r\n    if (selectedSize) {\r\n      filtered = filtered.filter((beam) => beam.Size === selectedSize);\r\n    }\r\n\r\n    setFilteredBeams(filtered);\r\n  }, [selectedProfType, selectedSize, beams]);\r\n\r\n  const selectedImage = imageMapping[selectedProfType] || CbeamEN1003651;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <div className=\"filters\">\r\n        <label className=\"dropdown-label\">\r\n          Profile Type:&ensp;\r\n          <select\r\n            value={selectedProfType}\r\n            onChange={(e) => {\r\n              setSelectedProfType(e.target.value);\r\n              setSelectedSize(\"\");\r\n            }}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {profTypeOptions.map((profType) => (\r\n              <option key={profType} value={profType}>\r\n                {profType}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label className=\"dropdown-label\">\r\n          Size:&ensp;\r\n          <select\r\n            value={selectedSize}\r\n            onChange={(e) => setSelectedSize(e.target.value)}\r\n            disabled={!selectedProfType}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {sizeOptions.map((size) => (\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      {selectedProfType && selectedSize && (\r\n        <div className=\"beam-details\">\r\n          <hr />\r\n          <h6>\r\n            {selectedProfType} - {selectedSize}\r\n          </h6>\r\n          {filteredBeams.map((beam) => (\r\n            <div key={beam.id} className=\"beam\">\r\n              <table className=\"specs-table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>Height (h):</strong> {beam.h} mm\r\n                    </td>\r\n                    <td>\r\n                      <strong>Width (b):</strong> {beam.b} mm\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>Web Thickness (s):</strong> {beam.s} mm\r\n                    </td>\r\n                    <td>\r\n                      <strong>Flange Thickness (t):</strong> {beam.t} mm\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan={2}>\r\n                      <strong>Section Area:</strong> {beam.Secarea} cmÂ²\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"2\" style={{ textAlign: \"center\" }}>\r\n                      <img\r\n                        className=\"img-show\"\r\n                        src={selectedImage}\r\n                        alt=\"Beam illustration\"\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeamEN10365Data;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_ref","title","description","beams","setBeams","useState","filteredBeams","setFilteredBeams","profTypeOptions","setProfTypeOptions","sizeOptions","setSizeOptions","selectedProfType","setSelectedProfType","selectedSize","setSelectedSize","imageMapping","IPE","IbeamEN1003651","HE","HL","HD","HP","UBP","UB","UC","I","IbeamEN1003652","IPN","J","HLZ","UPE","CbeamEN1003651","PFC","UPN","CbeamEN1003652","U","CH","useEffect","customOrder","axios","get","then","response","data","sortedProfTypes","Set","map","beam","Proftype","sort","a","b","indexOf","catch","error","console","filtered","filter","sortedSizes","Size","getFirstNumber","str","match","parseInt","Infinity","selectedImage","_jsxs","className","children","_jsx","value","onChange","e","target","profType","disabled","size","h","s","t","colSpan","Secarea","style","textAlign","src","alt","id"],"sourceRoot":""}