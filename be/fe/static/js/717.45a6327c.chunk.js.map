{"version":3,"file":"static/js/717.45a6327c.chunk.js","mappings":"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","sources":["components/piping/pipe/PipeB3619Data.jsx","webpack://fe/./src/components/piping/pipe/PipeData.css?93f6"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PipeData.css\";\r\nimport pipeImage from \"./images/Pipe.png\";\r\n\r\nconst PipeB3619Data = ({ title, description }) => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n  const [npsOptions, setNpsOptions] = useState([]);\r\n  const [schOptions, setSchOptions] = useState([]);\r\n  const [selectedNps, setSelectedNps] = useState(\"\");\r\n  const [selectedSch, setSelectedSch] = useState(\"\");\r\n\r\n  const decimalToFraction = (decimal) => {\r\n    const fractionMap = {\r\n      \"0.125\": \"1/8\",\r\n      \"0.250\": \"1/4\",\r\n      \"0.375\": \"3/8\",\r\n      \"0.500\": \"1/2\",\r\n      \"0.625\": \"5/8\",\r\n      \"0.750\": \"3/4\",\r\n      \"0.875\": \"7/8\",\r\n    };\r\n\r\n    const wholeNumber = Math.floor(decimal);\r\n    const fraction = decimal - wholeNumber;\r\n\r\n    if (fraction === 0) return wholeNumber.toString();\r\n\r\n    const fractionString = fractionMap[fraction.toFixed(3)];\r\n\r\n    return wholeNumber === 0\r\n      ? fractionString || `${fraction.toFixed(3)} (not in map)`\r\n      : `${wholeNumber} ${\r\n          fractionString || `${fraction.toFixed(3)} (not in map)`\r\n        }`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const apiUrl = \"/api/pipe/asmeb3619/\";\r\n\r\n    axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        const data = response.data.map((project) => ({\r\n          ...project,\r\n          NPS: parseFloat(project.NPS).toString(),\r\n          Sch: project.Sch.toString(),\r\n        }));\r\n        setProjects(data);\r\n        setFilteredProjects(data);\r\n\r\n        const nps = [...new Set(data.map((project) => project.NPS))].sort(\r\n          (a, b) => parseFloat(a) - parseFloat(b)\r\n        );\r\n        setNpsOptions(nps);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtered = projects;\r\n    if (selectedNps) {\r\n      filtered = filtered.filter((project) => project.NPS === selectedNps);\r\n      const sch = [...new Set(filtered.map((project) => project.Sch))].sort(\r\n        (a, b) => parseFloat(a) - parseFloat(b)\r\n      );\r\n      setSchOptions(sch);\r\n    } else {\r\n      setSchOptions([]);\r\n    }\r\n\r\n    if (selectedSch) {\r\n      filtered = filtered.filter((project) => project.Sch === selectedSch);\r\n    }\r\n\r\n    setFilteredProjects(filtered);\r\n  }, [selectedNps, selectedSch, projects]);\r\n\r\n  const getSelectedDn = () => {\r\n    const project = projects.find(\r\n      (p) => p.NPS === selectedNps && p.Sch === selectedSch\r\n    );\r\n    return project ? project.DN : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <div className=\"filters\">\r\n        <label className=\"dropdown-label\">\r\n          NPS:&ensp;\r\n          <select\r\n            value={selectedNps}\r\n            onChange={(e) => {\r\n              setSelectedNps(e.target.value);\r\n              setSelectedSch(\"\");\r\n            }}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {npsOptions.map((nps) => (\r\n              <option key={nps} value={nps}>\r\n                {decimalToFraction(parseFloat(nps))}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label className=\"dropdown-label\">\r\n          Sch:&ensp;\r\n          <select\r\n            value={selectedSch}\r\n            onChange={(e) => setSelectedSch(e.target.value)}\r\n            disabled={!selectedNps}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {schOptions.map((sch) => (\r\n              <option key={sch} value={sch}>\r\n                {sch}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      {selectedNps && selectedSch && (\r\n        <div className=\"project-details\">\r\n          <hr />\r\n          <h6>\r\n            Pipe Size: {decimalToFraction(parseFloat(selectedNps))}\" (DN\r\n            {getSelectedDn()}), Sch: {selectedSch}\r\n          </h6>\r\n          {filteredProjects.map((project) => (\r\n            <div\r\n              key={`${project.NPS}-${project.Sch}-${project.OD}`}\r\n              className=\"project\"\r\n            >\r\n              <table className=\"specs-table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>OD:</strong> {project.OD} mm\r\n                    </td>\r\n                    <td>\r\n                      <strong>ID:</strong>{\" \"}\r\n                      {(project.OD - project.Thk * 2).toFixed(2)} mm\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>Thk:</strong> {project.Thk} mm\r\n                    </td>\r\n                    <td>\r\n                      <strong>Weight:</strong> {project.Weight} kg/m\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td colSpan=\"2\" style={{ textAlign: \"center\" }}>\r\n                        <img\r\n                          className=\"img-show\"\r\n                          src={pipeImage}\r\n                          alt=\"Pipe illustration\"\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PipeB3619Data;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_ref","title","description","projects","setProjects","useState","filteredProjects","setFilteredProjects","npsOptions","setNpsOptions","schOptions","setSchOptions","selectedNps","setSelectedNps","selectedSch","setSelectedSch","decimalToFraction","decimal","wholeNumber","Math","floor","fraction","toString","fractionString","toFixed","useEffect","axios","get","then","response","data","map","project","NPS","parseFloat","Sch","nps","Set","sort","a","b","catch","error","console","filtered","filter","sch","_jsxs","className","children","_jsx","value","onChange","e","target","disabled","getSelectedDn","find","p","DN","OD","Thk","Weight","style","textAlign","marginTop","colSpan","src","pipeImage","alt","width"],"sourceRoot":""}